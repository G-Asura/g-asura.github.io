{"title":"使用Nocalhost在Kubernetes中调试代码","uid":"0deca7558ba6f9defe92ca748e91351a","slug":"使用Nocalhost在Kubernetes中调试代码","date":"2022-10-10T12:10:41.000Z","updated":"2022-10-19T02:04:16.638Z","comments":true,"path":"api/articles/使用Nocalhost在Kubernetes中调试代码.json","keywords":null,"cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>云原生开发工程师在日常开发中会经常遇到需要操作或者连接Kubernetes集群中的资源，但是往往本地开发环境和Kubernetes集群之间网络不通，这时调试代码就会十分不方便，所以有时我们需要在Kubernetes集群中进行代码调试，下面就是基于Nocalhost的一种在Kubernetes集群中调试代码的实践方案。</p></blockquote>\n<div class=\"toc\">\n\n<!-- toc -->\n\n<ul>\n<li><a href=\"#nocalhost\">Nocalhost</a><ul>\n<li><a href=\"#jian-jie\">简介</a></li>\n<li><a href=\"#shi-xian-yuan-li\">实现原理</a></li>\n</ul>\n</li>\n<li><a href=\"#shi-jian\">实践</a><ul>\n<li><a href=\"#kai-fa-huan-jing\">开发环境</a></li>\n<li><a href=\"#liu-cheng\">流程</a><ul>\n<li><a href=\"#yi-chuang-jian-registry\">一、创建Registry</a></li>\n<li><a href=\"#er-chuang-jian-kubernetes-ji-qun\">二、创建Kubernetes集群</a></li>\n<li><a href=\"#san-an-zhuang-nocalhost\">三、安装Nocalhost</a></li>\n<li><a href=\"#si-pei-zhi-nocalhost\">四、配置Nocalhost</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n\n</div>\n\n<h2><span id=\"nocalhost\">Nocalhost</span><a href=\"#nocalhost\" class=\"header-anchor\">#</a></h2><h3><span id=\"jian-jie\">简介</span><a href=\"#jian-jie\" class=\"header-anchor\">#</a></h3><p>官方对Nocalhost的定义如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Nocalhost 是一款开源的基于 IDE 的云原生应用开发工具：\n  - 直接在 Kubernetes 集群中构建、测试和调试应用程序\n  - 提供易于使用的 IDE 插件（支持 VS Code 和 JetBrains），即使在 Kubernetes 集群中进行开发和调试，Nocalhost 也能保持和本地开发一样的开发体验\n  - 使用即时文件同步进行开发： 即时将您的代码更改同步到远端容器，而无需重建镜像或重新启动容器。</code></pre>\n<p>简单来讲，Nocalhost是一款基于IDE的云原生开发工具，可以使得云上开发达到和本地开发一样的效果<br>更多具体介绍可以参考官网：<a href=\"https://nocalhost.dev/docs/introduction/\">Nocalhost</a></p>\n<h3><span id=\"shi-xian-yuan-li\">实现原理</span><a href=\"#shi-xian-yuan-li\" class=\"header-anchor\">#</a></h3><p>Nocalhost 由单个二进制 CLI 和 IDE 插件组成。 理想情况下，您可以直接将它与您熟悉的 IDE 一起使用。 Nocalhost 不需要服务器端组件，因为它通过 KubeConfig 直接与您的 Kubernetes 集群通信，就像 kubectl 一样。<br><img src=\"../images/Nocalhost/how-it-works.webp\" alt=\"流程图\"><br>主要流程：  </p>\n<ol>\n<li>使用kubeconfig连接到集群</li>\n<li>使用workload进行调试，可以选择自定义的调试镜像运行环境，以Golang为例可以使用dlv镜像</li>\n<li>在项目中配置Nocalhost调试</li>\n<li>可以通过控制台获取程序运行状态</li>\n</ol>\n<h2><span id=\"shi-jian\">实践</span><a href=\"#shi-jian\" class=\"header-anchor\">#</a></h2><h3><span id=\"kai-fa-huan-jing\">开发环境</span><a href=\"#kai-fa-huan-jing\" class=\"header-anchor\">#</a></h3><ul>\n<li>IDE：VSCode</li>\n<li>集群：Kind</li>\n<li>镜像仓库：Registry</li>\n<li>语言：Golang</li>\n</ul>\n<h3><span id=\"liu-cheng\">流程</span><a href=\"#liu-cheng\" class=\"header-anchor\">#</a></h3><h4><span id=\"yi-chuang-jian-registry\">一、创建Registry</span><a href=\"#yi-chuang-jian-registry\" class=\"header-anchor\">#</a></h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># docker run -d --restart always --network kind --name registry -p 0.0.0.0:5000:5000 registry:2</code></pre>\n<h4><span id=\"er-chuang-jian-kubernetes-ji-qun\">二、创建Kubernetes集群</span><a href=\"#er-chuang-jian-kubernetes-ji-qun\" class=\"header-anchor\">#</a></h4><details class=\"custom-details\">\n<summary>kind create</summary>\n<p><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># kind create cluster --image kindest&#x2F;node:v1.21.12 --config&#x3D;- &lt;&lt;EOF\nkind: Cluster\napiVersion: kind.x-k8s.io&#x2F;v1alpha4\nnetworking:\n  apiServerPort: 6443\n  podSubnet: 172.16.0.0&#x2F;16\n  serviceSubnet: 172.19.0.0&#x2F;16\nnodes:\n- role: control-plane\n  extraPortMappings:\n  - containerPort: 80\n    hostPort: 80\n    protocol: TCP\n  - containerPort: 443\n    hostPort: 443\n    protocol: TCP\n  - containerPort: 8181\n    hostPort: 8181\n    protocol: TCP\nkubeadmConfigPatches:\n- |\n  kind: ClusterConfiguration\n  etcd:\n    local:\n      extraArgs:\n        listen-metrics-urls: http:&#x2F;&#x2F;0.0.0.0:2381\n  controllerManager:\n    extraArgs:\n      bind-address: 0.0.0.0\n  scheduler:\n    extraArgs:\n      bind-address: 0.0.0.0\ncontainerdConfigPatches:\n- |-\n  [plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry.mirrors.&quot;localhost:5000&quot;]\n    endpoint &#x3D; [&quot;http:&#x2F;&#x2F;registry:5000&quot;]\nEOF</code></pre>\n\n</p>\n</details>\n<h4><span id=\"san-an-zhuang-nocalhost\">三、安装Nocalhost</span><a href=\"#san-an-zhuang-nocalhost\" class=\"header-anchor\">#</a></h4><p>以VSCode为例，在扩展里搜索Nocalhost进行安装，详细可以参考官网<a href=\"https://nocalhost.dev/zh-CN/docs/quick-start/\">QuickStart</a></p>\n<h4><span id=\"si-pei-zhi-nocalhost\">四、配置Nocalhost</span><a href=\"#si-pei-zhi-nocalhost\" class=\"header-anchor\">#</a></h4><ol>\n<li><p>添加集群</p>\n<p>通过kubeconfig添加集群</p>\n<p><img src=\"../images/Nocalhost/cluster.png\" alt=\"添加集群\"></p>\n</li>\n<li><p>选择工作负载进入DevMode</p>\n<p>在Nocalhost选项卡里选择我们想要进行调试的工作负载进入DevMode，如果没有，我们可以创建一个简单的Deployment</p>\n<details class=\"custom-details\">\n<summary>deployment.yaml</summary>\n<p><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">apiVersion: apps&#x2F;v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80</code></pre>\n\n</p>\n</details>\n<p><img src=\"../images/Nocalhost/deployment.png\" alt=\"选择Workload\"></p>\n</li>\n<li><p>选择项目文件</p>\n<p>可以选择本地目录，或者远端代码库，这里有个简单的<a href=\"https://github.com/G-Asura/nocalhost-example\">例子</a><br><img src=\"../images/Nocalhost/floar.png\" alt=\"选择项目\"></p>\n</li>\n<li><p>选择调试镜像</p>\n<p>选择调试镜像，可以使用官方提供的调试镜像，如果不满足需求，也可以构建自己的镜像，下面以Golang为例构建1.18版本的dlv镜像</p>\n<details class=\"custom-details\">\n<summary>Dockerfile</summary>\n<p><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">FROM golang:1.18\nRUN go install github.com&#x2F;go-delve&#x2F;delve&#x2F;cmd&#x2F;dlv@v1.9.1</code></pre>\n\n</p>\n</details>\n<p><img src=\"../images/Nocalhost/images.png\" alt=\"选择镜像\"></p>\n</li>\n<li><p>配置Nocalhost</p>\n<p>如果需要对进行特殊配置，可以在文件或者浏览器里配置</p>\n<p><img src=\"../images/Nocalhost/config.png\" alt=\"配置\"><br><img src=\"../images/Nocalhost/web.png\" alt=\"配置\"></p>\n<details class=\"custom-details\">\n<summary>nocalhost.config</summary>\n<p><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">name: nginx-deployment\nserviceType: deployment\ncontainers:\n  - name: nginx\n    dev:\n      gitUrl: git@github.com:G-Asura&#x2F;nocalhost-example.git\n      image: localhost:5000&#x2F;dlv:1.18\n      shell: &quot;&quot;\n      workDir: &quot;&quot;\n      storageClass: &quot;&quot;\n      resources:\n        limits:\n          memory: 512Mi\n          cpu: &quot;1&quot;\n        requests:\n          memory: 256Mi\n          cpu: &quot;0.5&quot;\n      persistentVolumeDirs: []\n      command:\n        run: []\n        debug:\n          - .&#x2F;debug.sh\n      debug:\n        remoteDebugPort: 8181\n        language: go\n      hotReload: true\n      sync: null\n      env: []\n      portForward: []</code></pre>\n\n</p>\n</details>\n</li>\n<li><p>开发调试</p>\n<p>启动了DevMode之后就可以在新窗口进行代码调试，在调试之前需要准备一个调试脚本</p>\n<details class=\"custom-details\">\n<summary>debug.sh</summary>\n<p><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">#! &#x2F;bin&#x2F;sh\nexport GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.cn\ndlv --headless --log --listen :8181 --api-version 2 --accept-multiclient debug main.go</code></pre>\n\n</p>\n</details>\n<p>同时需要准备IDE调试配置，下面以VSCode为例</p>\n<details class=\"custom-details\">\n<summary>launch.json</summary>\n<p><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n &quot;version&quot;: &quot;0.2.0&quot;,\n &quot;configurations&quot;: [\n   &#123;\n     &quot;type&quot;: &quot;nocalhost&quot;,\n     &quot;request&quot;: &quot;attach&quot;,\n     &quot;name&quot;: &quot;Nocalhost Debug&quot;\n   &#125;\n ]\n&#125;</code></pre>\n\n</p>\n</details>\n<p>最后就可以在程序中打上断点进行调试了</p>\n<p><img src=\"../images/Nocalhost/debug.png\" alt=\"Debug\"></p>\n</li>\n</ol>\n","feature":true,"text":" 云原生开发工程师在日常开发中会经常遇到需要操作或者连接Kubernetes集群中的资源，但是往往本地开发环境和Kubernetes集群之间网络不通，这时调试代码就会十分不方便，所以有时我们需要在Kubernetes集群中进行代码调试，下面就是基于Nocalhost的一种在Kub...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"Tools","slug":"Tools","count":1,"path":"api/categories/Tools.json"}],"tags":[{"name":"Kubernetes","slug":"Kubernetes","count":2,"path":"api/tags/Kubernetes.json"},{"name":"Nocalhost","slug":"Nocalhost","count":1,"path":"api/tags/Nocalhost.json"},{"name":"IDE","slug":"IDE","count":1,"path":"api/tags/IDE.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Nocalhost</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">实现原理</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">实践</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">开发环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">一、创建Registry</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">二、创建Kubernetes集群</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">三、安装Nocalhost</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">四、配置Nocalhost</span></a></li></ol></li></ol></li></ol>","author":{"name":"Asura","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Keep runnig!","socials":{"github":"https://github.com/G-Asura","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Cilium实现原理","uid":"65501d6a3eead0987c9f5d07b63371fd","slug":"Cilium实现原理","date":"2022-04-12T14:09:25.000Z","updated":"2022-04-13T14:08:01.025Z","comments":true,"path":"api/articles/Cilium实现原理.json","keywords":null,"cover":[],"text":" Cilium是eBPF网络分支的明星项目，Cilium的发布也意味着eBPF开始向K8S领域进军。 Cilium eBPF流程 流程图 Agent启动原理 入口函数 数据路径 kube-proxy包转发路径 Cilium eBPF包转发路径 演示 查看main详情 另一个ses...","link":"","photos":[],"count_time":{"symbolsCount":"49k","symbolsTime":"44 mins."},"categories":[{"name":"eBPF","slug":"eBPF","count":2,"path":"api/categories/eBPF.json"}],"tags":[{"name":"CNI","slug":"CNI","count":1,"path":"api/tags/CNI.json"},{"name":"eBPF","slug":"eBPF","count":2,"path":"api/tags/eBPF.json"},{"name":"Kubernetes","slug":"Kubernetes","count":2,"path":"api/tags/Kubernetes.json"}],"author":{"name":"Asura","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Keep runnig!","socials":{"github":"https://github.com/G-Asura","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}